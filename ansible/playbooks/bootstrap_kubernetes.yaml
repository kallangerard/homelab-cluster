---
- name: Initialise master nodes
  hosts: "{{ init_node }}"
  gather_facts: no
  tasks:
    - name: Initialise First Node
      become: yes
      shell:
        cmd: >
          curl -sfL https://get.k3s.io | 
          INSTALL_K3S_EXEC="
          --cluster-init
          --write-kubeconfig-mode 644
          --tls-san {{ k3s_endpoint }}
          --token {{ lookup('env', 'K3S_TOKEN') }}
          "
          sh -
        warn: no

- name: Join Nodes
  hosts: "{{ join_nodes }}:!{{ init_node }}"
  gather_facts: no
  tasks:
    - name: Join Other Master Nodes
      become: yes
      shell:
        cmd: >
          curl -sfL https://get.k3s.io | 
          INSTALL_K3S_EXEC="
          --server https://{{ k3s_endpoint }}:6443
          --write-kubeconfig-mode 644
          --tls-san {{ k3s_endpoint }}
          --token {{ lookup('env', 'K3S_TOKEN') }}
          "
          sh -
        warn: no

- name: Common Tasks
  hosts: "{{ init_node }},{{ join_nodes }}"
  gather_facts: no
  tasks:
    - name: Create Kubernetes config directory
      file:
        path: $HOME/.kube
        state: directory

    - name: Copy k3s config to Home Directory
      become: yes
      copy:
        src: /etc/rancher/k3s/k3s.yaml
        dest: /home/{{ ansible_user }}/.kube/config
        owner: "{{ ansible_user | default(ansible_user_id) }}"
        group: "{{ ansible_user | default(ansible_user_id) }}"
        mode: 0644
        remote_src: true

    # - name: Create system wide environmental variables for Rancher
    #   become: yes
    #   blockinfile:
    #     path: /etc/profile.d/rancher.sh
    #     create: yes
    #     insertafter: EOF
    #     block: |
    #       export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
    #     state: present

    - name: Create temporary download directory
      tempfile:
        state: directory
      register: helm_download

    - name: Download Helm Binary
      get_url:
        url: https://get.helm.sh/helm-{{helm_version}}-linux-amd64.tar.gz
        dest: "{{ helm_download.path }}/helm.gz"

    - name: Unpack Binary
      unarchive:
        src: "{{ helm_download.path }}/helm.gz"
        dest: "{{ helm_download.path }}"
        remote_src: yes

    - name: Move binary to path
      become: yes
      copy:
        src: "{{ helm_download.path }}/linux-amd64/helm"
        dest: /usr/local/bin/helm
        mode: "0755"
        remote_src: yes
